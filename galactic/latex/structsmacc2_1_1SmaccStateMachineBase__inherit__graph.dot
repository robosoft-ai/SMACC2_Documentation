digraph "smacc2::SmaccStateMachineBase&lt; DerivedStateMachine, InitialStateType &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{smacc2::SmaccStateMachine\lBase\< DerivedStateMachine,\l InitialStateType \>\n||+ SmaccStateMachineBase()\l+ ~SmaccStateMachineBase()\l+ reset()\l+ stop()\l+ eStop()\l+ initiate_impl()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="State Machine."];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{smacc2::ISmaccStateMachine\n|# nh_\l# timer_\l# stateMachinePub_\l# stateMachineStatusPub_\l# transitionLogPub_\l# transitionHistoryService_\l# currentState_\l# currentStateInfo_\l# status_msg_\l# orthogonals_\l# stateMachineInfo_\l- m_mutex_\l- eventQueueMutex_\l- stateMachineCurrentAction\l- stateCallbackConnections\l- globalData_\l- transitionLogHistory_\l- runMode_\l- signalDetector_\l- stateSeqCounter_\l|+ ISmaccStateMachine()\l+ ~ISmaccStateMachine()\l+ reset()\l+ stop()\l+ eStop()\l+ getOrthogonal()\l+ getClientBehavior()\l+ getOrthogonals()\l+ requiresComponent()\l+ postEvent()\l+ postEvent()\l+ getGlobalSMData()\l+ setGlobalSMData()\l+ mapBehavior()\l+ getStateMachineName()\l+ state_machine_visualization()\l+ getCurrentStateInfo()\l+ publishTransition()\l+ onInitialize()\l+ getTransitionLogHistory()\l+ createSignalConnection()\l+ notifyOnStateEntryStart()\l+ notifyOnStateEntryEnd()\l+ notifyOnRuntimeConfigured()\l+ notifyOnStateExitting()\l+ notifyOnStateExited()\l+ disposeStateAndDisconnect\lSignals()\l+ notifyOnRuntimeConfiguration\lFinished()\l+ getCurrentStateCounter()\l+ getCurrentState()\l+ getStateMachineInfo()\l+ buildStateMachineInfo()\l+ getNode()\l+ getLogger()\l+ getMutex()\l# checkStateMachineConsistence()\l# initializeROS()\l# onInitialized()\l# createOrthogonal()\l- propagateEventToStateReactors()\l- updateStatusMessage()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc2_1_1ISmaccStateMachine.html",tooltip=" "];
  Node3 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{boost::statechart::\lasynchronous_state_machine\l\< DerivedStateMachine, InitialState\lType, SmaccFifoScheduler, SmaccAllocator \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 [label="{$sm_name$::$SmName\l$\< $SmName$, State1 \>\n||+ onInitialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$struct_0bsm__name_0b_1_1_0bSmName_0b.html",tooltip=" "];
  Node1 -> Node5 [dir="back",color="orange",style="solid",label=" \< $SmName$, State1 \>" ];
  Node5 [label="{smacc2::SmaccStateMachine\lBase\< $SmName$, State1 \>\n||+ SmaccStateMachineBase()\l+ ~SmaccStateMachineBase()\l+ reset()\l+ stop()\l+ eStop()\l+ initiate_impl()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structsmacc2_1_1SmaccStateMachineBase.html",tooltip=" "];
  Node1 -> Node6 [dir="back",color="orange",style="solid",label=" \< SmAtomicPerformanceTrace1,\l State1 \>" ];
  Node6 [label="{smacc2::SmaccStateMachine\lBase\< SmAtomicPerformanceTrace1,\l State1 \>\n||+ SmaccStateMachineBase()\l+ ~SmaccStateMachineBase()\l+ reset()\l+ stop()\l+ eStop()\l+ initiate_impl()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structsmacc2_1_1SmaccStateMachineBase.html",tooltip=" "];
  Node6 -> Node7 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node7 [label="{sm_atomic_performance\l_trace_1::SmAtomicPerformance\lTrace1\n||+ onInitialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structsm__atomic__performance__trace__1_1_1SmAtomicPerformanceTrace1.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="orange",style="solid",label=" \< SmAtomicSubscribersPerformance\lTest, State1 \>" ];
  Node8 [label="{smacc2::SmaccStateMachine\lBase\< SmAtomicSubscribersPerformance\lTest, State1 \>\n||+ SmaccStateMachineBase()\l+ ~SmaccStateMachineBase()\l+ reset()\l+ stop()\l+ eStop()\l+ initiate_impl()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structsmacc2_1_1SmaccStateMachineBase.html",tooltip=" "];
  Node8 -> Node9 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node9 [label="{sm_atomic_subscribers\l_performance_test::SmAtomic\lSubscribersPerformanceTest\n||+ onInitialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structsm__atomic__subscribers__performance__test_1_1SmAtomicSubscribersPerformanceTest.html",tooltip=" "];
  Node1 -> Node10 [dir="back",color="orange",style="solid",label=" \< SmCoretestTransitionSpeed1,\l State1 \>" ];
  Node10 [label="{smacc2::SmaccStateMachine\lBase\< SmCoretestTransitionSpeed1,\l State1 \>\n||+ SmaccStateMachineBase()\l+ ~SmaccStateMachineBase()\l+ reset()\l+ stop()\l+ eStop()\l+ initiate_impl()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structsmacc2_1_1SmaccStateMachineBase.html",tooltip=" "];
  Node10 -> Node11 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node11 [label="{sm_coretest_transition\l_speed_1::SmCoretestTransition\lSpeed1\n||+ onInitialize()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$structsm__coretest__transition__speed__1_1_1SmCoretestTransitionSpeed1.html",tooltip=" "];
}
